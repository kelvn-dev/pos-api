name: Build And Push Images to Dockerhub

on:
  push:
    branches: [ "main", "dev" ]

env:
  IMAGE_NAME: "vinpos-api"

jobs:
  build_docker_images:
    name: Build Docker Image To Dockerhub
    runs-on: [ubuntu-latest]
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download application.yaml from S3
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          aws s3 cp s3://$S3_BUCKET_NAME/config/application.yaml src/main/resources/application.yaml

      - name: Extract Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{secrets.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}
          tags: type=sha

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          logout: true

      - name: Build And Push
        uses: docker/build-push-action@v5
        with:
          context: . # indicates the location of the Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    needs: build_docker_images
    runs-on: ubuntu-latest
    steps:
      - name: Install Cloudflared
        run: |
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared.deb
          rm cloudflared.deb

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_ssh_key
          chmod 600 ~/.ssh/deploy_ssh_key

      - name: Deploy to remote server
        run: |
          NEW_TAG="sha-$(git rev-parse --short HEAD)"
          ssh -i ~/.ssh/deploy_ssh_key -o StrictHostKeyChecking=no \
              -o ProxyCommand='cloudflared access ssh --hostname %h' \
              vinbrain@api.meikocn.com << EOF
            # Update the image tag in docker-compose.yml
            sed -i '' 's|image: kelvn/vinpos-api:.*|image: ${{secrets.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:${NEW_TAG}|' docker-compose.yml
            
            # Restart the services
            cd ~/vinpos
            docker-compose pull api
            docker-compose up -d
            
            # Clean up old images
            docker image prune -f          